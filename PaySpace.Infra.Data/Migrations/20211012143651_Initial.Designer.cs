// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaySpace.Infra.Data;

namespace PaySpace.Infra.Data.Migrations
{
    [DbContext(typeof(PaySpaceDbContext))]
    [Migration("20211012143651_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaySpace.Domain.Model.Calc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CalcMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Income")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CalcMethodId");

                    b.ToTable("Calcs");
                });

            modelBuilder.Entity("PaySpace.Domain.Model.CalcMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.HasAlternateKey("PostalCode");

                    b.ToTable("CalcMethods");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ddc46bcc-b484-4356-a1e0-69163fc8c4f9"),
                            Method = "Progressive",
                            PostalCode = "7441"
                        },
                        new
                        {
                            Id = new Guid("e3561787-3d2c-41fe-9be2-31a1a9ac4761"),
                            Method = "FlatValue",
                            PostalCode = "A100"
                        },
                        new
                        {
                            Id = new Guid("21a56700-2b33-45a2-b2b0-95d9ad45ff80"),
                            Method = "FlatRate",
                            PostalCode = "7000"
                        },
                        new
                        {
                            Id = new Guid("6d3000b7-eac4-4505-be32-1c5f4b6ff899"),
                            Method = "Progressive",
                            PostalCode = "1000"
                        });
                });

            modelBuilder.Entity("PaySpace.Domain.Model.ProgressiveTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("From")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("To")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ProgressiveTables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb813e0f-5e3c-4223-8afe-4805bccd0f61"),
                            From = 0m,
                            Rate = 0.1m,
                            To = 8350m
                        },
                        new
                        {
                            Id = new Guid("7fc9e398-c867-41f2-adf0-628bf7960a07"),
                            From = 8351m,
                            Rate = 0.15m,
                            To = 33950m
                        },
                        new
                        {
                            Id = new Guid("6a0d5a8a-1d03-4972-8e7f-a6e764a5f89f"),
                            From = 33951m,
                            Rate = 0.25m,
                            To = 82250m
                        },
                        new
                        {
                            Id = new Guid("a066fb2b-daff-4b24-a0a4-4b987089bedf"),
                            From = 82251m,
                            Rate = 0.28m,
                            To = 171550m
                        },
                        new
                        {
                            Id = new Guid("d9b1c7b9-c737-4888-9fc8-2a602bd6985e"),
                            From = 171551m,
                            Rate = 0.33m,
                            To = 372950m
                        },
                        new
                        {
                            Id = new Guid("fd84aad0-83c6-4241-a06e-9c15f42ff8ed"),
                            From = 372951m,
                            Rate = 0.35m
                        });
                });

            modelBuilder.Entity("PaySpace.Domain.Model.Calc", b =>
                {
                    b.HasOne("PaySpace.Domain.Model.CalcMethod", null)
                        .WithMany("Calculations")
                        .HasForeignKey("CalcMethodId");
                });

            modelBuilder.Entity("PaySpace.Domain.Model.CalcMethod", b =>
                {
                    b.Navigation("Calculations");
                });
#pragma warning restore 612, 618
        }
    }
}
