// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaySpace.Infra.Data;

namespace PaySpace.Infra.Data.Migrations
{
    [DbContext(typeof(PaySpaceDbContext))]
    partial class PaySpaceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaySpace.Domain.Model.Calc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CalcMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Income")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CalcMethodId");

                    b.ToTable("Calcs");
                });

            modelBuilder.Entity("PaySpace.Domain.Model.CalcMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.HasAlternateKey("PostalCode");

                    b.ToTable("CalcMethods");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1f3fa8e4-534a-47e2-8a4e-4c3ca769ff9d"),
                            Method = "Progressive",
                            PostalCode = "7441"
                        },
                        new
                        {
                            Id = new Guid("dc40403f-7a9c-440d-8e12-0b265cf8c17a"),
                            Method = "FlatValue",
                            PostalCode = "A100"
                        },
                        new
                        {
                            Id = new Guid("95f1546d-23a4-4ac5-8ea6-61b3211bc045"),
                            Method = "FlatRate",
                            PostalCode = "7000"
                        },
                        new
                        {
                            Id = new Guid("47f53d44-adb8-4fa3-a206-1ee6f960d275"),
                            Method = "Progressive",
                            PostalCode = "1000"
                        });
                });

            modelBuilder.Entity("PaySpace.Domain.Model.ProgressiveTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("From")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("To")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ProgressiveTables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0eded851-88c0-4711-86b4-ed3c09d91d24"),
                            From = 0m,
                            Rate = 0.1m,
                            To = 8350m
                        },
                        new
                        {
                            Id = new Guid("1b2d6b8b-acba-4cbd-99ae-e7b0711d20fe"),
                            From = 8351m,
                            Rate = 0.15m,
                            To = 33950m
                        },
                        new
                        {
                            Id = new Guid("0b78b89b-7ce1-4740-bc36-a6a1c137df08"),
                            From = 33951m,
                            Rate = 0.25m,
                            To = 82250m
                        },
                        new
                        {
                            Id = new Guid("42b8ddcb-c2b1-4f21-9ff7-a1677cab1d59"),
                            From = 82251m,
                            Rate = 0.28m,
                            To = 171550m
                        },
                        new
                        {
                            Id = new Guid("c1e94353-a5eb-405f-9212-634686fddc82"),
                            From = 171551m,
                            Rate = 0.33m,
                            To = 372950m
                        },
                        new
                        {
                            Id = new Guid("7efb5345-fa3f-4dad-b248-164294a90a81"),
                            From = 372951m,
                            Rate = 0.35m
                        });
                });

            modelBuilder.Entity("PaySpace.Domain.Model.Calc", b =>
                {
                    b.HasOne("PaySpace.Domain.Model.CalcMethod", null)
                        .WithMany("Calculations")
                        .HasForeignKey("CalcMethodId");
                });

            modelBuilder.Entity("PaySpace.Domain.Model.CalcMethod", b =>
                {
                    b.Navigation("Calculations");
                });
#pragma warning restore 612, 618
        }
    }
}
