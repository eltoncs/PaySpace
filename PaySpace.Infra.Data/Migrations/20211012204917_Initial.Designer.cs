// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaySpace.Infra.Data;

namespace PaySpace.Infra.Data.Migrations
{
    [DbContext(typeof(PaySpaceDbContext))]
    [Migration("20211012204917_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaySpace.Domain.Model.Calc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CalcMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Income")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CalcMethodId");

                    b.ToTable("Calcs");
                });

            modelBuilder.Entity("PaySpace.Domain.Model.CalcMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.HasAlternateKey("PostalCode");

                    b.ToTable("CalcMethods");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a20c85c-0cc0-4d0e-89ec-d55ba1bd58e3"),
                            Method = "Progressive",
                            PostalCode = "7441"
                        },
                        new
                        {
                            Id = new Guid("79e252a9-8d27-4fc7-85b6-287e02392935"),
                            Method = "FlatValue",
                            PostalCode = "A100"
                        },
                        new
                        {
                            Id = new Guid("52b9e2b5-a1a5-423b-b9bd-7e68b96de035"),
                            Method = "FlatRate",
                            PostalCode = "7000"
                        },
                        new
                        {
                            Id = new Guid("dd0c3a96-f8e8-458c-aee4-3721e97147a3"),
                            Method = "Progressive",
                            PostalCode = "1000"
                        });
                });

            modelBuilder.Entity("PaySpace.Domain.Model.ProgressiveTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("From")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("To")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ProgressiveTables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8933dce0-5a23-48ef-afe1-7a90038930dd"),
                            From = 0m,
                            Rate = 0.1m,
                            To = 8350m
                        },
                        new
                        {
                            Id = new Guid("09163b3d-300c-4982-8f07-080964b137be"),
                            From = 8351m,
                            Rate = 0.15m,
                            To = 33950m
                        },
                        new
                        {
                            Id = new Guid("e31b887f-74fb-4b3a-a560-9ea9ff8f4680"),
                            From = 33951m,
                            Rate = 0.25m,
                            To = 82250m
                        },
                        new
                        {
                            Id = new Guid("478c8a36-635c-4866-aa79-24f67de02594"),
                            From = 82251m,
                            Rate = 0.28m,
                            To = 171550m
                        },
                        new
                        {
                            Id = new Guid("0da43645-2560-48d2-90f4-d45813727b74"),
                            From = 171551m,
                            Rate = 0.33m,
                            To = 372950m
                        },
                        new
                        {
                            Id = new Guid("2db15f47-25cd-4ea6-82f8-152e3477afad"),
                            From = 372951m,
                            Rate = 0.35m,
                            To = 99999999999999m
                        });
                });

            modelBuilder.Entity("PaySpace.Domain.Model.Calc", b =>
                {
                    b.HasOne("PaySpace.Domain.Model.CalcMethod", null)
                        .WithMany("Calculations")
                        .HasForeignKey("CalcMethodId");
                });

            modelBuilder.Entity("PaySpace.Domain.Model.CalcMethod", b =>
                {
                    b.Navigation("Calculations");
                });
#pragma warning restore 612, 618
        }
    }
}
